import 'package:flutter_form_builder/flutter_form_builder.dart';
import 'dart:convert';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'dart:async';
import 'package:http/http.dart' as http;
import 'package:lgnwithdb2/services.dart';
import 'package:lgnwithdb2/users.dart';

void main() => runApp(LoginApp());

class LoginApp extends StatefulWidget {
  LoginApp({Key key}) : super(key: key);

  @override
  _LoginAppState createState() => _LoginAppState();

}

class _LoginAppState extends State<LoginApp> {
  final _formKey = GlobalKey<FormState>();


  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: "Login Page",
      home: LoginAppRender(),
    );
  }
}

class LoginAppRender extends StatelessWidget {
  final _formKey = GlobalKey<FormState>();

  var _states = [ "Andhra Pradesh",
    "Arunachal Pradesh",
    "Assam",
    "Bihar",
    "Chhattisgarh",
    "Goa",
    "Gujarat",
    "Haryana",
    "Himachal Pradesh",
    "Jammu and Kashmir",
    "Jharkhand",
    "Karnataka",
    "Kerala",
    "Madhya Pradesh",
    "Maharashtra",
    "Manipur",
    "Meghalaya",
    "Mizoram",
    "Nagaland",
    "Odisha",
    "Punjab",
    "Rajasthan",
    "Sikkim",
    "Tamil Nadu",
    "Telangana",
    "Tripura",
    "Uttarakhand",
    "Uttar Pradesh",
    "West Bengal",
    "Andaman and Nicobar Islands",
    "Chandigarh",
    "Dadra and Nagar Haveli",
    "Daman and Diu",
    "Delhi",
    "Lakshadweep",
    "Puducherry"];

  var _cities = [
    'Adilabad',
    'Anantapur',
    'Chittoor',
    'Kakinada',
    'Guntur',
    'Hyderabad',
    'Karimnagar',
    'Khammam',
    'Krishna',
    'Kurnool',
    'Mahbubnagar',
    'Medak',
    'Nalgonda',
    'Nizamabad',
    'Ongole',
    'Hyderabad',
    'Srikakulam',
    'Nellore',
    'Visakhapatnam',
    'Vizianagaram',
    'Warangal',
    'Eluru',
    'Kadapa',
    'Anjaw',
    'Changlang',
    'East Siang',
    'Kurung Kumey',
    'Lohit',
    'Lower Dibang Valley',
    'Lower Subansiri',
    'Papum Pare',
    'Tawang',
    'Tirap',
    'Dibang Valley',
    'Upper Siang',
    'Upper Subansiri',
    'West Kameng',
    'West Siang',
    'Baksa',
    'Barpeta',
    'Bongaigaon',
    'Cachar',
    'Chirang',
    'Darrang',
    'Dhemaji',
    'Dima Hasao',
    'Dhubri',
    'Dibrugarh',
    'Goalpara',
    'Golaghat',
    'Hailakandi',
    'Jorhat',
    'Kamrup',
    'Kamrup Metropolitan',
    'Karbi Anglong',
    'Karimganj',
    'Kokrajhar',
    'Lakhimpur',
    'Marigaon',
    'Nagaon',
    'Nalbari',
    'Sibsagar',
    'Sonitpur',
    'Tinsukia',
    'Udalguri',
    'Araria',
    'Arwal',
    'Aurangabad',
    'Banka',
    'Begusarai',
    'Bhagalpur',
    'Bhojpur',
    'Buxar',
    'Darbhanga',
    'East Champaran',
    'Gaya',
    'Gopalganj',
    'Jamui',
    'Jehanabad',
    'Kaimur',
    'Katihar',
    'Khagaria',
    'Kishanganj',
    'Lakhisarai',
    'Madhepura',
    'Madhubani',
    'Munger',
    'Muzaffarpur',
    'Nalanda',
    'Nawada',
    'Patna',
    'Purnia',
    'Rohtas',
    'Saharsa',
    'Samastipur',
    'Saran',
    'Sheikhpura',
    'Sheohar',
    'Sitamarhi',
    'Siwan',
    'Supaul',
    'Vaishali',
    'West Champaran',
    'Chandigarh',
    'Bastar',
    'Bijapur',
    'Bilaspur',
    'Dantewada',
    'Dhamtari',
    'Durg',
    'Jashpur',
    'Janjgir-Champa',
    'Korba',
    'Koriya',
    'Kanker',
    'Kabirdham (Kawardha)',
    'Mahasamund',
    'Narayanpur',
    'Raigarh',
    'Rajnandgaon',
    'Raipur',
    'Surguja',
    'Dadra and Nagar Haveli'
        'Daman',
    'Diu',
    'Central Delhi',
    'East Delhi',
    'New Delhi',
    'North Delhi',
    'North East Delhi',
    'North West Delhi',
    'South Delhi',
    'South West Delhi',
    'West Delhi',
    'North Goa',
    'South Goa'
        'Ahmedabad',
    'Amreli district',
    'Anand',
    'Banaskantha',
    'Bharuch',
    'Bhavnagar',
    'Dahod',
    'The Dangs',
    'Gandhinagar',
    'Jamnagar',
    'Junagadh',
    'Kutch',
    'Kheda',
    'Mehsana',
    'Narmada',
    'Navsari',
    'Patan',
    'Panchmahal',
    'Porbandar',
    'Rajkot',
    'Sabarkantha',
    'Surendranagar',
    'Surat',
    'Vyara',
    'Vadodara',
    'Valsad',
    'Ambala',
    'Bhiwani',
    'Faridabad',
    'Fatehabad',
    'Gurgaon',
    'Hissar',
    'Jhajjar',
    'Jind',
    'Karnal',
    'Kaithal',
    'Kurukshetra',
    'Mahendragarh',
    'Mewat',
    'Palwal',
    'Panchkula',
    'Panipat',
    'Rewari',
    'Rohtak',
    'Sirsa',
    'Sonipat',
    'Yamuna Nagar',
    'Bilaspur',
    'Chamba',
    'Hamirpur',
    'Kangra',
    'Kinnaur',
    'Kullu',
    'Lahaul and Spiti',
    'Mandi',
    'Shimla',
    'Sirmaur',
    'Solan',
    'Una',
    'Anantnag',
    'Badgam',
    'Bandipora',
    'Baramulla',
    'Doda',
    'Ganderbal',
    'Jammu',
    'Kargil',
    'Kathua',
    'Kishtwar',
    'Kupwara',
    'Kulgam',
    'Leh',
    'Poonch',
    'Pulwama',
    'Rajauri',
    'Ramban',
    'Reasi',
    'Samba',
    'Shopian',
    'Srinagar',
    'Udhampur',
    'Bokaro',
    'Chatra',
    'Deoghar',
    'Dhanbad',
    'Dumka',
    'East Singhbhum',
    'Garhwa',
    'Giridih',
    'Godda',
    'Gumla',
    'Hazaribag',
    'Jamtara',
    'Khunti',
    'Koderma',
    'Latehar',
    'Lohardaga',
    'Pakur',
    'Palamu',
    'Ramgarh',
    'Ranchi',
    'Sahibganj',
    'Seraikela Kharsawan',
    'Simdega',
    'West Singhbhum',
    'Bagalkot',
    'Bangalore Rural',
    'Bangalore Urban',
    'Belgaum',
    'Bellary',
    'Bidar',
    'Bijapur',
    'Chamarajnagar',
    'Chikkamagaluru',
    'Chikkaballapur',
    'Chitradurga',
    'Davanagere',
    'Dharwad',
    'Dakshina Kannada',
    'Gadag',
    'Gulbarga',
    'Hassan',
    'Haveri district',
    'Kodagu',
    'Kolar',
    'Koppal',
    'Mandya',
    'Mysore',
    'Raichur',
    'Shimoga',
    'Tumkur',
    'Udupi',
    'Uttara Kannada',
    'Ramanagara',
    'Yadgir',
    'Alappuzha',
    'Ernakulam',
    'Idukki',
    'Kannur',
    'Kasaragod',
    'Kollam',
    'Kottayam',
    'Kozhikode',
    'Malappuram',
    'Palakkad',
    'Pathanamthitta',
    'Thrissur',
    'Thiruvananthapuram',
    'Wayanad',
    'Alirajpur',
    'Anuppur',
    'Ashok Nagar',
    'Balaghat',
    'Barwani',
    'Betul',
    'Bhind',
    'Bhopal',
    'Burhanpur',
    'Chhatarpur',
    'Chhindwara',
    'Damoh',
    'Datia',
    'Dewas',
    'Dhar',
    'Dindori',
    'Guna',
    'Gwalior',
    'Harda',
    'Hoshangabad',
    'Indore',
    'Jabalpur',
    'Jhabua',
    'Katni',
    'Khandwa (East Nimar)',
    'Khargone (West Nimar)',
    'Mandla',
    'Mandsaur',
    'Morena',
    'Narsinghpur',
    'Neemuch',
    'Panna',
    'Rewa',
    'Rajgarh',
    'Ratlam',
    'Raisen',
    'Sagar',
    'Satna',
    'Sehore',
    'Seoni',
    'Shahdol',
    'Shajapur',
    'Sheopur',
    'Shivpuri',
    'Sidhi',
    'Singrauli',
    'Tikamgarh',
    'Ujjain',
    'Umaria',
    'Vidisha',
    'Ahmednagar',
    'Akola',
    'Amravati',
    'Aurangabad',
    'Bhandara',
    'Beed',
    'Buldhana',
    'Chandrapur',
    'Dhule',
    'Gadchiroli',
    'Gondia',
    'Hingoli',
    'Jalgaon',
    'Jalna',
    'Kolhapur',
    'Latur',
    'Mumbai City',
    'Mumbai suburban',
    'Nandurbar',
    'Nanded',
    'Nagpur',
    'Nashik',
    'Osmanabad',
    'Parbhani',
    'Pune',
    'Raigad',
    'Ratnagiri',
    'Sindhudurg',
    'Sangli',
    'Solapur',
    'Satara',
    'Thane',
    'Wardha',
    'Washim',
    'Yavatmal',
    'Bishnupur',
    'Churachandpur',
    'Chandel',
    'Imphal East',
    'Senapati',
    'Tamenglong',
    'Thoubal',
    'Ukhrul',
    'Imphal West',
    'East Garo Hills',
    'East Khasi Hills',
    'Jaintia Hills',
    'Ri Bhoi',
    'South Garo Hills',
    'West Garo Hills',
    'West Khasi Hills',
    'Aizawl',
    'Champhai',
    'Kolasib',
    'Lawngtlai',
    'Lunglei',
    'Mamit',
    'Saiha',
    'Serchhip',
    'Dimapur',
    'Kohima',
    'Mokokchung',
    'Mon',
    'Phek',
    'Tuensang',
    'Wokha',
    'Zunheboto',
    'Angul',
    'Boudh (Bauda)',
    'Bhadrak',
    'Balangir',
    'Bargarh (Baragarh)',
    'Balasore',
    'Cuttack',
    'Debagarh (Deogarh)',
    'Dhenkanal',
    'Ganjam',
    'Gajapati',
    'Jharsuguda',
    'Jajpur',
    'Jagatsinghpur',
    'Khordha',
    'Kendujhar (Keonjhar)',
    'Kalahandi',
    'Kandhamal',
    'Koraput',
    'Kendrapara',
    'Malkangiri',
    'Mayurbhanj',
    'Nabarangpur',
    'Nuapada',
    'Nayagarh',
    'Puri',
    'Rayagada',
    'Sambalpur',
    'Subarnapur (Sonepur)',
    'Sundergarh',
    'Karaikal',
    'Mahe',
    'Pondicherry',
    'Yanam',
    'Amritsar',
    'Barnala',
    'Bathinda',
    'Firozpur',
    'Faridkot',
    'Fatehgarh Sahib',
    'Fazilka',
    'Gurdaspur',
    'Hoshiarpur',
    'Jalandhar',
    'Kapurthala',
    'Ludhiana',
    'Mansa',
    'Moga',
    'Sri Muktsar Sahib',
    'Pathankot',
    'Patiala',
    'Rupnagar',
    'Ajitgarh (Mohali)',
    'Sangrur',
    'Nawanshahr',
    'Tarn Taran',
    'Ajmer',
    'Alwar',
    'Bikaner',
    'Barmer',
    'Banswara',
    'Bharatpur',
    'Baran',
    'Bundi',
    'Bhilwara',
    'Churu',
    'Chittorgarh',
    'Dausa',
    'Dholpur',
    'Dungapur',
    'Ganganagar',
    'Hanumangarh',
    'Jhunjhunu',
    'Jalore',
    'Jodhpur',
    'Jaipur',
    'Jaisalmer',
    'Jhalawar',
    'Karauli',
    'Kota',
    'Nagaur',
    'Pali',
    'Pratapgarh',
    'Rajsamand',
    'Sikar',
    'Sawai Madhopur',
    'Sirohi',
    'Tonk',
    'Udaipur',
    'East Sikkim',
    'North Sikkim',
    'South Sikkim',
    'West Sikkim',
    'Ariyalur',
    'Chennai',
    'Coimbatore',
    'Cuddalore',
    'Dharmapuri',
    'Dindigul',
    'Erode',
    'Kanchipuram',
    'Kanyakumari',
    'Karur',
    'Madurai',
    'Nagapattinam',
    'Nilgiris',
    'Namakkal',
    'Perambalur',
    'Pudukkottai',
    'Ramanathapuram',
    'Salem',
    'Sivaganga',
    'Tirupur',
    'Tiruchirappalli',
    'Theni',
    'Tirunelveli',
    'Thanjavur',
    'Thoothukudi',
    'Tiruvallur',
    'Tiruvarur',
    'Tiruvannamalai',
    'Vellore',
    'Viluppuram',
    'Virudhunagar',
    'Dhalai',
    'North Tripura',
    'South Tripura',
    'Khowai',
    'West Tripura',
    'Agra',
    'Allahabad',
    'Aligarh',
    'Ambedkar Nagar',
    'Auraiya',
    'Azamgarh',
    'Barabanki',
    'Budaun',
    'Bagpat',
    'Bahraich',
    'Bijnor',
    'Ballia',
    'Banda',
    'Balrampur',
    'Bareilly',
    'Basti',
    'Bulandshahr',
    'Chandauli',
    'Chhatrapati Shahuji Maharaj Nagar',
    'Chitrakoot',
    'Deoria',
    'Etah',
    'Kanshi Ram Nagar',
    'Etawah',
    'Firozabad',
    'Farrukhabad',
    'Fatehpur',
    'Faizabad',
    'Gautam Buddh Nagar',
    'Gonda',
    'Ghazipur',
    'Gorakhpur',
    'Ghaziabad',
    'Hamirpur',
    'Hardoi',
    'Mahamaya Nagar',
    'Jhansi',
    'Jalaun',
    'Jyotiba Phule Nagar',
    'Jaunpur district',
    'Ramabai Nagar (Kanpur Dehat)',
    'Kannauj',
    'Kanpur',
    'Kaushambi',
    'Kushinagar',
    'Lalitpur',
    'Lakhimpur Kheri',
    'Lucknow',
    'Mau',
    'Meerut',
    'Maharajganj',
    'Mahoba',
    'Mirzapur',
    'Moradabad',
    'Mainpuri',
    'Mathura',
    'Muzaffarnagar',
    'Panchsheel Nagar district (Hapur)',
    'Pilibhit',
    'Shamli',
    'Pratapgarh',
    'Rampur',
    'Raebareli',
    'Saharanpur',
    'Sitapur',
    'Shahjahanpur',
    'Sant Kabir Nagar',
    'Siddharthnagar',
    'Sonbhadra',
    'Sant Ravidas Nagar',
    'Sultanpur',
    'Shravasti',
    'Unnao',
    'Varanasi',
    'Almora',
    'Bageshwar',
    'Chamoli',
    'Champawat',
    'Dehradun',
    'Haridwar',
    'Nainital',
    'Pauri Garhwal',
    'Pithoragarh',
    'Rudraprayag',
    'Tehri Garhwal',
    'Udham Singh Nagar',
    'Uttarkashi',
    'Birbhum',
    'Bankura',
    'Bardhaman',
    'Darjeeling',
    'Dakshin Dinajpur',
    'Hooghly',
    'Howrah',
    'Jalpaiguri',
    'Cooch Behar',
    'Kolkata',
    'Maldah',
    'Paschim Medinipur',
    'Purba Medinipur',
    'Murshidabad',
    'Nadia',
    'North 24 Parganas',
    'South 24 Parganas',
    'Purulia',
    'Uttar Dinajpur',
  ];
  //var s = new InState();
  //var c = new InCity();
  var service = new RestAPIServices();
  var user = new Users();

  final GlobalKey<FormBuilderState> _fbKey = GlobalKey<FormBuilderState>();
  @override
  Widget build(BuildContext context) {

    return Scaffold(
      resizeToAvoidBottomPadding: false,
      body: SingleChildScrollView(
        child: Container(
          color: Colors.redAccent,
          child: Center(
            child:FormBuilder(
              // context,
              key: _fbKey,
              autovalidate: true,
              // readonly: true,
              child: Column(
                //crossAxisAlignment: CrossAxisAlignment.center,
                children: <Widget>[
                  new Container(
                      margin: const EdgeInsets.only(top: 50)
                  ),

                  Card(
                    child: Container(
                      padding: new EdgeInsets.all(10),
                      child: FormBuilderTextField(
                        attribute: "Username",
                        decoration: InputDecoration(
                            icon: const Icon(Icons.tag_faces),
                            hintText: "",
                            labelText:"Username"
                        ),
                        validators: [
                          FormBuilderValidators.required(),
                          FormBuilderValidators.max(100),
                        ],

                      ),
                    ),
                    elevation: 5,
                  ),

                  Card(
                    child: Container(
                      padding: new EdgeInsets.all(10),
                      child:FormBuilderTextField(
                        attribute: "Password",
                        decoration: InputDecoration(
                          icon: const Icon(Icons.security),
                          labelText: "Password",
                          hintText: "",
                        ),
                        validators: [
                          FormBuilderValidators.required(),
                          FormBuilderValidators.max(100),
                        ],
                      ),
                    ),
                    elevation: 5,
                  ),

                  Card(
                    child: Container(
                      padding: new EdgeInsets.all(10),
                      child:FormBuilderTextField(
                        attribute: "FirstName",
                        decoration: InputDecoration(
                          icon: const Icon(Icons.people_outline),
                          labelText: "FirstName",
                          hintText: "",
                        ),
                        validators: [
                          FormBuilderValidators.required(),

                        ],
                      ),
                    ),
                    elevation: 5,
                  ),
                  Card(
                    child: Container(
                      padding: new EdgeInsets.all(10),
                      child:FormBuilderTextField(
                        attribute: "LastName",
                        decoration: InputDecoration(
                          icon: const Icon(Icons.people),
                          labelText: "LastName",
                          hintText: "",
                        ),
                        validators: [
                          FormBuilderValidators.required(),

                        ],
                      ),
                    ),
                    elevation: 5,
                  ),

                  Card(
                    child: Container(
                      padding: new EdgeInsets.all(10),
                      child:FormBuilderTextField(
                        attribute: "Email",
                        decoration: InputDecoration(
                          icon: const Icon(Icons.email),
                          labelText: "Email",
                          hintText: "",
                        ),
                        validators: [
                          FormBuilderValidators.email(),
                          FormBuilderValidators.required()
                        ],
                      ),
                    ),
                    elevation: 5,
                  ),
                  Card(
                    child: Container(
                      padding: new EdgeInsets.all(10),
                      child:FormBuilderTextField(
                        attribute: "Phonenumber",
                        decoration: InputDecoration(
                          icon: const Icon(Icons.phone_iphone),
                          labelText: "PhoneNumber",
                          hintText: "",
                        ),
                        validators: [
                          FormBuilderValidators.required(),
                          FormBuilderValidators.numeric(),
                        ],
                      ),
                    ),
                    elevation: 5,
                  ),
                  Card(
                    child: Column(
                      children: <Widget>[
                        FormBuilderTextField(
                          attribute: "Address",
                          decoration: InputDecoration(
                            icon: const Icon(Icons.home),
                            labelText: "Address",
                            hintText: "",
                          ),
                          validators: [
                            FormBuilderValidators.required(),
                          ],
                        ),
                        FormBuilderTextField(
                          attribute: "line2",
                          decoration: InputDecoration(

                            labelText: "Line 2",
                            hintText: "",
                          ),
                          validators: [

                          ],
                        ),
                        FormBuilderTextField(
                          attribute: "line3",
                          decoration: InputDecoration(

                            labelText: "Line 3",
                            hintText: "",
                          ),
                          validators: [],
                        ),
                        FormBuilderTextField(
                          attribute: "locality",
                          decoration: InputDecoration(

                            labelText: "Locality",
                            hintText: "",
                          ),
                          validators: [
                            FormBuilderValidators.required(),
                          ],
                        ),
                        FormBuilderTextField(
                          attribute: "PinCode",
                          decoration: InputDecoration(
                            labelText: "PinCode",
                            hintText: "",
                          ),
                          validators: [
                            FormBuilderValidators.required(),
                            FormBuilderValidators.numeric(),
                          ],
                        ),
                      ],
                    ),
                    elevation: 5,
                  ),



                  Card(
                    child: Column(
                      children: <Widget>[

                        FormBuilderDropdown(
                          attribute: "City",
                          decoration: InputDecoration(
                            labelText: "City",
                            icon: const Icon(Icons.location_city),
                          ),
                          hint: Text('Select City'),

                          validators: [FormBuilderValidators.required()],
                          items: _cities
                              .map((city) => DropdownMenuItem(
                            value: city,
                            child: Text('$city'),
                          )).toList(),
                        ),
                        FormBuilderDropdown(
                          attribute: "State",
                          decoration: InputDecoration(
                            labelText: "State",
                            icon: const Icon(Icons.location_city),
                          ),
                          hint: Text('Select State'),

                          validators: [FormBuilderValidators.required()],
                          items: _states
                              .map((state) => DropdownMenuItem(
                            value: state,
                            child: Text('$state'),
                          )).toList(),
                        ),
                        FormBuilderDropdown(
                          attribute: "Country",
                          decoration: InputDecoration(
                            labelText: "Country",
                            icon: const Icon(Icons.location_city),
                          ),
                          hint: Text('Select Country'),

                          validators: [FormBuilderValidators.required()],
                          items: ['IND']
                              .map((country) => DropdownMenuItem(
                            value: country,
                            child: Text('$country'),
                          )).toList(),
                        ),

                      ],
                    ),
                    elevation: 5,
                  ),


                  Card(
                    child: Container(
                      padding: new EdgeInsets.all(10),
                      child: Column(
                        children: <Widget>[
                          FormBuilderTextField(
                            attribute: "govtidtype",
                            decoration: InputDecoration(
                              icon: const Icon(Icons.perm_identity),
                              labelText: "GovtID Type",
                              hintText: "",
                            ),
                            validators: [
                              FormBuilderValidators.required(),
                            ],
                          ),
                          FormBuilderTextField(
                            attribute: "Govtid",
                            decoration: InputDecoration(
                              icon: const Icon(Icons.perm_identity),
                              labelText: "Govtid",
                              hintText: "",
                            ),
                            validators: [FormBuilderValidators.required(),],
                          ),

                        ],
                      ),
                    ),
                    elevation: 5,
                  ),




                  new Container(
                      margin: const EdgeInsets.only(top: 40)
                  ),
                  Row(
                    mainAxisSize: MainAxisSize.max,
                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                    children: <Widget>[
                      MaterialButton(
                        child: Text("Submit",style: TextStyle(color: Colors.white),),
                        color: Colors.blue,
                        onPressed: () {
                          if (_fbKey.currentState.saveAndValidate()) {
                            _fbKey.currentState.save();
                            if (_fbKey.currentState.validate()) {
                              user.uname= _fbKey.currentState.value['Username'];
                              user.password = _fbKey.currentState.value['Password'];
                              user.firstname =_fbKey.currentState.value['FirstName'];
                              user.lastname = _fbKey.currentState.value['LastName'];
                              user.email = _fbKey.currentState.value['Email'];
                              user.phonenumber = _fbKey.currentState.value['Phonenumber'];
                              user.addlineone = _fbKey.currentState.value['Address'];
                              user.addlinetwo = _fbKey.currentState.value['line2'];
                              user.addlinethree = _fbKey.currentState.value['line3'];
                              user.locality = _fbKey.currentState.value['locality'];
                              user.city = _fbKey.currentState.value['City'];
                              user.pincode=_fbKey.currentState.value['PinCode'];
                              user.state=_fbKey.currentState.value['State'];
                              user.country=_fbKey.currentState.value['Country'];
                              user.govtidtype=_fbKey.currentState.value['govtidtype'];
                              user.govtid=_fbKey.currentState.value['Govtid'];
                              print(_fbKey.currentState.value);
                            }
                            String s = jsonEncode(user.mapToJson());
                            service.registerUser(s);
                            print(s);
                          }
                        },
                      ),
                      MaterialButton(
                        child: Text("Reset",style: TextStyle(color: Colors.white),),
                        color: Colors.pink,
                        onPressed: () {
                          _fbKey.currentState.reset();
                        },
                      ),
                    ],
                  )
                ],
              ),
            ),




          ),
        ),
      ),
    );

  }
/*  void _submit() {
    if(_formKey.currentState.validate()) {
      _formKey.currentState.save();
      print(_uname);
      print(_password);
      Navigator.push(context, MaterialPageRoute(builder: (context) => RegisterUserApp()));
    }
  }

 */
}